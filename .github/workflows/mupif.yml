# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MuPIF

on:
  push:
    branches: [ master, dev, act ]
  pull_request:
    branches: [ master, dev, act ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]
        # runs-on: [ubuntu-20.40, windows-2019]
        # fail-fast: 0
      max-parallel: 1 # avoid localhost conflicts
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install openssh-server wine64 wine flake8 python3-wheel python3-pip dos2unix
        # python -m pip install --upgrade pip
        python -m pip install -q codecov wenv
        pip install -q -r requirements.txt
    - name: Prepare wenv
      run: |
        echo '{"arch":"win64"}' > ~/.wenv.json
        wenv init
        wenv pip install -q --only-binary=pyrsistent -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=obsolete
        # this is too verbose and is mostly just coding style
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=obsolete
    - name: nosetests (native)
      run: |
        nosetests --rednose --force-color -v --with-coverage 2>&1 | tools/grcat-mupif
        codecov -F unittests
    - name: nosetests (win64)
      run: |
        wenv nosetests --rednose -v  2>&1 | dos2unix | tools/grcat-mupif
    - name: examples (native)
      timeout-minutes: 2 # normally about 35s
      run: |
        cd examples; ./runex.py --codecov 2>&1 | ../tools/grcat-mupif
    - name: examples (win32)
      timeout-minutes: 2 # normally about 50s
      run: |
        cd examples; ./runex.py --wenv=all 2>&1 | dos2unix | ../tools/grcat-mupif
