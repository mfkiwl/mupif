This example ilustrates stationary thermo-mechanical task. Thermal and mechanical servers can run on different computers, Example07.py steers them both. Both servers use jobmanagers.

1. Start the server for thermal problem thermalServer.py, optionally with parameter -mX where X is 0 by default. A JobManager Mupif.JobManager@ThermalSolverDemo is started and allocates the thermal application.

2. Start the server for mechanical problem mechanicalServer.py optionally with parameter -mX where X is 0 by default. A JobManager Mupif.JobManager@MechanicalSolverDemo is started and allocates the mechanical problem.

This example may create a reverse tunnel between thermal and mechanical server so data flow directly between (two) computers without the need of intermediate steering computer. No ssh tunnels are created in VPN mode since addresses and ports can be accessed directly and without the need of encryption.

After starting both servers (which will start both JobManagers), the user can:
1. monitor their status (using tools/jobManStatus.py)
2. run a coupled simulation Example11.py, which creates inputs files for thermal and mechanical tasks, get temperature field and send it to the mechanical task. Temperature and displacements are recorded to vtk file.
